@model EPiServer.Reference.Commerce.Site.Features.Shared.Models.IProductModel

@{

    if (Model == null)
    {
        return;
    }

    bool hasDiscount = Model.IsAvailable && Model.DiscountedPrice.GetValueOrDefault().Amount < Model.PlacedPrice.Amount;
    string productLevelClass = hasDiscount ? "product has-discount" : "product";
    bool renderWishListButtons = Model.IsAvailable ? User.Identity.IsAuthenticated && ViewBag.IsWishList != null && ViewBag.IsWishList == true : false;
}
<div class="product-card">
    <a href="@Model.Url" class="product-card_img">
        <img src="@Model.ImageUrl" alt="@Model.Code">
    </a>
    <div class="product-card-bottom">
        <p class="product-card_name">@Model.DisplayName</p>
        <nav class="product-action">
            <ul class="d-flex">
                <li>
                    <a href="@Model.Url"><i class="fa fa-eye" aria-hidden="true"></i></a>
                </li>
                <li>
                    <button><i class="fa fa-star-o" aria-hidden="true"></i></button>
                </li>
                <li>
                    <button><i class="fa fa-share-square-o" aria-hidden="true"></i></button>
                </li>
                <li>
                    <button class="add-to-cart"><i class="fa fa-cart-arrow-down" aria-hidden="true"></i></button>
                </li>
            </ul>
        </nav>
    </div>

    <div class="product-card-tags">
        @if (hasDiscount)
        {
            <p class="tags on-sale">on sale!</p>
        }
        @if (!Model.IsAvailable)
        {
            <p class="tags out-stock">out of stock</p>
        }
    </div>

    <span class="price">@Helpers.RenderMoney(Model.PlacedPrice)</span>
</div>