@using EPiServer.Commerce.Order
@using EPiServer.Reference.Commerce.Site.Features.Shared.Extensions
@model EPiServer.Reference.Commerce.Site.Features.OrderHistory.ViewModels.OrderHistoryViewModel

@section Styles{

    <style type="text/css">
        .o-history {
            padding: 2rem;
            background-color: #ebe7df;
        }

            .o-history .l-content {
                background-color: #fff;
                width: 100%;
            }
    </style>

}

<div class="container-fluid">
    <div class="row o-history">
        <div class="l-content">
            <div class="treetable d-flex w-100">
                @if (!Equals(Model.Orders, null))
                {
                    <table class="tree-table table table-hover table-bordered">
                        <thead>
                            <tr>
                                <th>@Html.Translate("/OrderHistory/Labels/OrderID")</th>
                                <th>@Html.Translate("/OrderHistory/Labels/TotalPrice")</th>
                                <th>@Html.Translate("/OrderHistory/Labels/OrderDate")</th>
                                <th>@Html.Translate("/OrderHistory/Labels/Payment")</th>
                                <th>@Html.Translate("/OrderHistory/Labels/TotalPrice")</th>
                                <th>@("Manipulate")</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.Orders)
                            {
                                var orderForm = order.PurchaseOrder.GetFirstForm();

                                <tr data-node-id="@orderForm.OrderFormId">
                                    <td>@order.PurchaseOrder.OrderNumber</td>
                                    <td>@order.PurchaseOrder.OrderNumber</td>
                                    <td>@order.PurchaseOrder.Created.ToLongDateString()</td>
                                    <td>
                                        @if (orderForm.Payments.Any())
                                        {
                                            @String.Join(", ", orderForm.Payments.Select(x => x.PaymentMethodName))
                                        }
                                    </td>
                                    <td>
                                        @Helpers.RenderMoney(order.PurchaseOrder.GetTotal())
                                    </td>
                                </tr>
                                foreach (var item in order.Items)
                                {
                                    <tr data-node-id="@item.LineItem.Code" data-node-pid="@orderForm.OrderFormId">
                                        <td colspan="6">
                                            <li><a href="@item.LineItem.GetUrl()" class="link--black"><img src="@item.LineItem.GetThumbnailUrl()" /> @item.LineItem.DisplayName</a></li>
                                        </td>
                                    </tr>
                                }


                            }
                        </tbody>
                    </table>

                }
            </div>

        </div>
        <div class="col-xs-12 col-lg-9">
            <div class="section-box">
                <h2>@Html.PropertyFor(x => x.CurrentPage.Name)</h2>
                @Html.PropertyFor(x => x.CurrentPage.MainBody)
            </div>

            @foreach (var order in Model.Orders)
            {
                var orderForm = order.PurchaseOrder.GetFirstForm();
                <div class="row section-box">
                    <div class="col-xs-12 col-sm-6">
                        <h3>@Html.Translate("/OrderHistory/Labels/OrderID") @order.PurchaseOrder.OrderNumber</h3>
                        <p>@Html.Translate("/OrderHistory/Labels/OrderDate") @order.PurchaseOrder.Created.ToLongDateString()<br>@Html.Translate("/OrderHistory/Labels/Status") <strong>@order.PurchaseOrder.OrderStatus</strong></p>
                        @Html.Translate("/OrderHistory/Labels/Payment")
                        @if (orderForm.Payments.Any())
                        {
                            @String.Join(", ", orderForm.Payments.Select(x => x.PaymentMethodName))
                        }
                        <br>
                        @Html.Translate("/OrderHistory/Labels/TotalPrice") @Helpers.RenderMoney(order.PurchaseOrder.GetTotal())
                    </div>
                    <div class="col-xs-12 col-sm-6">
                        <h4>@Html.Translate("/OrderHistory/Labels/ShippedTo")</h4>

                        @foreach (var shippingAddress in order.ShippingAddresses)
                        {
                            @Html.Partial("_Address", shippingAddress)
                        }

                    </div>
                    <div class="col-xs-12">
                        <h4>@Html.Translate("/OrderHistory/Labels/ObjectsOrdered")</h4>
                        <ul class="list-unstyled">
                            @foreach (var item in order.Items)
                            {
                                <li><a href="@item.LineItem.GetUrl()" class="link--black"><img src="@item.LineItem.GetThumbnailUrl()" /> @item.LineItem.DisplayName</a></li>
                            }
                        </ul>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section  Scripts {
    <script src="~/Static/script/jquery-simple-tree-table.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.tree-table').simpleTreeTable({
                //expander: $('#expander'),
                //collapser: $('#collapser'),
                //store: 'session',
                //storeKey: 'simple-tree-table-basic'
            });
        });
    </script>
}