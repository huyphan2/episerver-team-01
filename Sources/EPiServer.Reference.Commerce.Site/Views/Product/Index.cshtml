@model EPiServer.Reference.Commerce.Site.Features.Product.ViewModels.FashionProductViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles{
    <link href="~/Static/css/product-detail.css" rel="stylesheet" />
}

<section id="product-detail" class="product-detail">
    <div class="container">
        <div class="row">
            <div class="col col-lg-5 col-md-12 col-sm-12 col-12">
                <div class="product-detail-carousel">
                    <div id="slick" class="slick">
                        @for (var i = 0; i < Model.Images.Count; i++)
                        {
                            <div class='slick-item'>
                                <img src="@Model.Images.ElementAt(i)" alt="@Model.Product.Code" class="slick-item_img">
                            </div>
                        }
                    </div>
                    <div class="extra-dots">
                        <div class="d-flex justify-content-center">
                            @for (var i = 0; i < Model.Images.Count; i++)
                            {
                                string active = i == 0 ? "active" : string.Empty;
                                <div class="extra-dots-item @active" data-extra="@i">
                                    <img src="@Model.Images.ElementAt(i)" alt="@Model.Product.Code" class="slick-item_img">
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="col col-lg-7 col-md-12 col-sm-12 col-12">
                <div class="product-detail-info">
                    <span class="price">@string.Format("{0}", Model.ListingPrice)</span>
                    <h1 class="product-detail-info_title">@Model.Product.DisplayName</h1>
                    <p class="product-detail-info_desc">@Html.Raw(Model.Product.LongDescription)</p>
                    <form action="" class="form-add-to-cart d-flex">
                        <div class="input-group">
                            <input id="product-count" type="number" value="0" min="0" class="form-control" placeholder="amount" aria-label="amount" aria-describedby="amount">
                        </div>
                        <button type="button" data-target="#navbar-cart-info" data-url="@Url.Action("AddToCart","Cart")" data-code="@Model.Variant.Code" data-quantity-target="#product-count" class="btn btn-primary add-to-cart ml-2">Add to cart</button>
                    </form>
                </div>
            </div>
        </div>

        <div class="row">
            @if (!Equals(Model.Product.TechSpecs, null) && Model.Product.TechSpecs.Any())
            {
                <div class="col col-12">
                    <div class="product-detail-paragraph">
                        @foreach (var specification in Model.Product.TechSpecs)
                        {
                            <div class="product-tech-spec">
                                <p class="title">@specification.Name</p>
                                <p class="text">@Html.Raw(specification.Description)</p>
                            </div>
                        }
                    </div>
                </div>
            }

        </div>
    </div>
</section>
<section class="prefer">
    <div class="container">
        <div class="row">
            @if (!Equals(Model.MayLikeProducts, null) && Model.MayLikeProducts.Any())
            {
                <div class="col col-12">
                    <h2 class="prefer-title">You may also like</h2>
                    <div class="prefer-carousel">
                        <div class="prefer-slick prefer-js-slick">
                            @{
                                var mayLikeCount = Model.MayLikeProducts.Count();
                                for (int i = 0; i < mayLikeCount; i++)
                                {
                                    <div class='slick-item'>
                                        @Html.Partial("_Product", Model.MayLikeProducts.ElementAt(i))
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>
<section class="prefer pb-4">
    <div class="container">
        <div class="row">
            @if (!Equals(Model.RelatedProducts, null) && Model.RelatedProducts.Any())
            {
                <div class="col col-12">
                    <h2 class="prefer-title">Related Product</h2>
                    <div class="prefer-carousel">
                        <div class="prefer-slick prefer-js-slick">
                            @{
                                var relatedCount = Model.RelatedProducts.Count();
                                for (int j = 0; j < relatedCount; j++)
                                {
                                    <div class='slick-item'>
                                        @Html.Partial("_Product", Model.RelatedProducts.ElementAt(j))
                                    </div>
                                }
                            }

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

@section Scripts{
    <script src="~/Scripts/custom/product-detail.js"></script>
}